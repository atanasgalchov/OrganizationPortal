@model NoticeViewModel
@{
    ViewData["Title"] = Model.Name != null ? $"{Model.Name}" : "Add Notice";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section styles
{

}
<!-- page content -->
<div class="right_col" role="main">
    <div class="page-title">
        <div class="g-title">
            <h3>@ViewData["Title"]</h3>
        </div>
    </div>

    <div class="clearfix"></div>
    <div class="">
        <div class="x_panel">
            <div class="x_title">
                <div class="clearfix"></div>
            </div>
            <div class="x_content form-content-medium">
                <br>
                <form id="edit-notice-form" class="form-vertical" method="post" action="@Url.Action("EditNotice", "Admin")">
                    @Html.HiddenFor(x => x.Id)

                    <div class="form-content">
                        <div class="form-group">
                            <label class="control-label" for="Name">Name</label>
                            <div>
                                @Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "Name" })
                                @Html.ValidationMessageFor(x => x.Name)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label" for="Title">Title</label>
                            <div>
                                @Html.TextBoxFor(x => x.Title, new { @class = "form-control", placeholder = "Title" })
                                @Html.ValidationMessageFor(x => x.Title)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label" for="Content">Content</label>
                            <div>
                                @Html.TextAreaFor(x => x.Content, new { @class = "form-control", placeholder = "Content", rows = "4" })
                                @Html.ValidationMessageFor(x => x.Content)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label" for="CategoryId">Category</label>
                            <div>
                                @Html.DropDownListFor(x => x.CategoryId, Model.CategoriesItems, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.CategoryId)
                            </div>
                        </div>

                    </div>

                    <div class="form-footer">
                        <button class="btn btn-large" type="button" data-action="back"><i class="fa fa-backward"></i> Back </button>
                        <button class="btn btn-large" id="edit-category-submit-button" type="submit"><i class="fa fa-save"></i> Save </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            var $form = $("#edit-notice-form");

            $form
                .find('[data-action]')
                .click(function (e) {
                    e.preventDefault();
                    var $target = $(e.currentTarget);
                    var action = $target.attr('data-action');

                    if (action == 'back') {
                        window.history.back();
                    }
                })
                .end()
                .submit(function (e) {
                    e.preventDefault();

                    var $form = $(this);
                    if (!$form.valid()) {
                        return;
                    }

                    var settings = {
                        url: $form.attr('action'),
                        success(response) {
                            if (response.isSuccess) {
                                window.location = response.redirectUrl;
                                return;
                            }
                        },
                        data: JSON.stringify($form.serializeToObject())
                    };

                    ASG.Ajax.postJson(settings);
                })
                .end();
        });
    </script>
}
